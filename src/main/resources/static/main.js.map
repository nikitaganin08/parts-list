{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-part/create-part.component.css","webpack:///./src/app/create-part/create-part.component.html","webpack:///./src/app/create-part/create-part.component.ts","webpack:///./src/app/part-list/part-list.component.css","webpack:///./src/app/part-list/part-list.component.html","webpack:///./src/app/part-list/part-list.component.ts","webpack:///./src/app/part.service.ts","webpack:///./src/app/part.ts","webpack:///./src/app/search-part/search-part.component.css","webpack:///./src/app/search-part/search-part.component.html","webpack:///./src/app/search-part/search-part.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PartListComponent } from './part-list/part-list.component';\r\nimport { CreatePartComponent } from './create-part/create-part.component';\r\nimport { SearchPartComponent } from './search-part/search-part.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'part', pathMatch: 'full' },\r\n  { path: 'part', component: PartListComponent },\r\n  { path: 'add', component: CreatePartComponent },\r\n  { path: 'search', component: SearchPartComponent},\r\n  { path: 'edit/:id', component: CreatePartComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"padding: 20px;\\\">\\n  <nav>\\n    <a routerLink=\\\"part\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Parts</a>\\n    <a routerLink=\\\"add\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Add</a>\\n    <a routerLink=\\\"search\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Search</a>\\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgxPaginationModule} from \"ngx-pagination\";\nimport { AppComponent } from './app.component';\nimport { CreatePartComponent } from './create-part/create-part.component';\nimport { PartListComponent } from './part-list/part-list.component';\nimport { SearchPartComponent } from './search-part/search-part.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreatePartComponent,\n    PartListComponent,\n    SearchPartComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h3>Create Part</h3>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <section>\\n        <form novalidate [formGroup]=\\\"partForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <fieldset>\\n            <div class=\\\"form-group\\\">\\n              <label>Name</label>\\n              <input type=\\\"text\\\"\\n                     class=\\\"form-control\\\"\\n                     formControlName=\\\"name\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label>Quantity</label>\\n              <input type=\\\"text\\\"\\n                     class=\\\"form-control\\\"\\n                     formControlName=\\\"quantity\\\">\\n            </div>\\n          </fieldset>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Required</label>\\n            <input type=\\\"checkbox\\\"\\n                   class=\\\"form-control\\\"\\n                   formControlName=\\\"necessity\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"  [disabled]=\\\"!partForm.valid\\\" >Submit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"redirectUserPage()\\\">Cancel</button>\\n        </form>\\n      </section>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport { Part } from '../part';\nimport { PartService } from '../part.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'create-part',\n  templateUrl: './create-part.component.html',\n  styleUrls: ['./create-part.component.css'],\n  providers: [PartService]\n})\n\nexport class CreatePartComponent implements OnInit, OnDestroy {\n\n  id: number;\n  part: Part;\n\n  partForm: FormGroup;\n  private sub: any;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private partService: PartService) { }\n\n  ngOnInit() {\n\n    this.sub = this.route.params.subscribe(params => {\n      this.id = params['id'];\n    });\n\n    this.partForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      quantity: new FormControl('', Validators.required),\n      necessity: new FormControl('')\n    });\n\n    if (this.id) {\n      this.partService.getPart(this.id).subscribe(\n        part => {\n          this.id = part.id;\n          this.partForm.patchValue({\n            name: part.name,\n            quantity: part.quantity,\n            necessity: part.necessity,\n          });\n        },error => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  onSubmit() {\n\n    if (this.partForm.valid) {\n      if (this.id) {\n        let part: Part = new Part(null,\n          this.partForm.controls['name'].value,\n          this.partForm.controls['necessity'].value,\n          this.partForm.controls['quantity'].value);\n        this.partService.updatePart(this.id, part).subscribe();\n      }\n      else {\n        let part: Part = new Part(null,\n          this.partForm.controls['name'].value,\n          this.partForm.controls['necessity'].value,\n          this.partForm.controls['quantity'].value);\n        this.partService.createPart(part).subscribe();\n\n      }\n      this.partForm.reset();\n      setTimeout(() => {\n          this.router.navigate(['/part'])\n        }\n        , 500);\n    }\n  }\n\n  redirectUserPage() {\n    this.router.navigate(['/part']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <section>\\n        <header class=\\\"header\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <h1>Parts of computer</h1>\\n                <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"reloadData()\\\">All</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"getRequiredPartsList(true)\\\">Required</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"getRequiredPartsList(false)\\\">Option</button>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n            </div>\\n          </div>\\n\\n        </header>\\n      </section>\\n\\n      <section class=\\\"main\\\">\\n\\n        <table class=\\\"table\\\">\\n          <thead>\\n          <tr>\\n            <th>#</th>\\n            <th>Part name</th>\\n            <th>Required</th>\\n            <th>Quantity</th>\\n            <th></th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let part of parts | paginate: {itemsPerPage:10, currentPage:p }\\\">\\n            <th scope=\\\"row\\\">{{part.id}}</th>\\n            <td>{{part.name}}</td>\\n            <td>{{part.necessity == true ? 'Yes' : 'No'}}</td>\\n            <td>{{part.quantity}}</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updatePart(part)\\\">Edit</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePart(part)\\\">Delete</button>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n        <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        <h4>You can assemble {{minPart}} {{minPart > 1 ? 'computers': 'computer'}}</h4>\\n      </section>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PartService } from '../part.service';\nimport { Part } from '../part';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'parts-list',\n  templateUrl: './part-list.component.html',\n  styleUrls: ['./part-list.component.css']\n})\nexport class PartListComponent implements OnInit {\n\n  parts: Part[];\n  minPart: number;\n\n  constructor(private router: Router, private partService: PartService) { }\n\n  ngOnInit() {\n    this.reloadData();\n    this.getMinRequiredPart();\n  }\n\n  reloadData() {\n    this.partService.getPartsList().subscribe(part => this.parts = part);\n    this.getMinRequiredPart();\n  }\n\n  getRequiredPartsList(necessity: boolean) {\n      this.partService.getRequiredPartsList(necessity).subscribe(part => this.parts = part);\n  }\n\n  getMinRequiredPart() {\n      this.partService.getMinRequiredPart().subscribe(min => this.minPart = min);\n  }\n\n  updatePart(part: Part) {\n    if(part) {\n      this.router.navigate(['/edit', part.id]);\n    }\n  }\n\n  deletePart(part: Part) {\n    this.partService.deletePart(part.id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Part} from \"./part\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PartService {\n\n  private baseUrl = 'http://parts-list.herokuapp.com/api/parts';\n\n  constructor(private http: HttpClient) { }\n\n  getPart(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createPart(part: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}` + `/create`, part);\n  }\n\n  updatePart(id: number, part: Object): Observable<any> {\n    return this.http.put(`${this.baseUrl}/${id}`, part);\n  }\n\n  deletePart(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getPartsList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  getPartByName(name: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/name/${name}`);\n  }\n\n  getRequiredPartsList(necessity: boolean) : Observable<any> {\n    return this.http.get(`${this.baseUrl}/required/${necessity}`)\n  }\n\n  getMinRequiredPart() : Observable<any> {\n    return this.http.get(`${this.baseUrl}/min`)\n  }\n}\n","export class Part {\r\n  id: number;\r\n  name: string;\r\n  necessity: boolean;\r\n  quantity: number;\r\n\r\n\r\n  constructor(id: number, name: string, necessity: boolean, quantity: number) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.necessity = necessity;\r\n    this.quantity = quantity;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h3>Search</h3>\\n<div style=\\\"width: 300px;\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"partname\\\">Enter part name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"partname\\\" required [(ngModel)]=\\\"partname\\\" name=\\\"partname\\\">\\n    </div>\\n\\n    <div class=\\\"btn-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n    </div>\\n  </form>\\n</div>\\n<ul>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <section>\\n          <header class=\\\"header\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n              </div>\\n            </div>\\n\\n          </header>\\n        </section>\\n\\n        <section class=\\\"main\\\">\\n\\n          <table class=\\\"table\\\">\\n            <thead>\\n            <tr *ngIf=\\\"part\\\">\\n              <th>#</th>\\n              <th>Part name</th>\\n              <th>Required</th>\\n              <th>Quantity</th>\\n              <th></th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngIf=\\\"part\\\">\\n              <th scope=\\\"row\\\">{{part.id}}</th>\\n              <td>{{part.name}}</td>\\n              <td>{{part.necessity}}</td>\\n              <td>{{part.quantity}}</td>\\n              <td>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updatePart(part)\\\">Edit</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePart(part)\\\">Delete</button>\\n              </td>\\n            </tr>\\n\\n            </tbody>\\n          </table>\\n        </section>\\n      </div>\\n    </div>\\n  </div>\\n\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Part } from '../part';\nimport { PartService } from '../part.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'search-part',\n  templateUrl: './search-part.component.html',\n  styleUrls: ['./search-part.component.css']\n})\nexport class SearchPartComponent implements OnInit {\n\n  partname: string;\n  part: Part;\n\n  constructor(private partService: PartService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.partname = \"\";\n  }\n\n  private searchParts() {\n    this.partService.getPartByName(this.partname).subscribe(part => this.part = part);\n  }\n\n  onSubmit() {\n    this.searchParts();\n  }\n\n  deletePart(part: Part) {\n    this.partService.deletePart(part.id)\n      .subscribe(\n        data => {\n          console.log(data);\n        },\n        error => console.log(error));\n  }\n\n  updatePart(part: Part) {\n    if(part) {\n      this.router.navigate(['/edit', part.id]);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}